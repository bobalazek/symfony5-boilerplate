# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # General
    app.name: 'Corcoviewer'
    app.twitter_handle: 'corcoviewer'
    app.description: 'Just your usual corcoviewer'
    app.keywords: 'corcoviewer'
    app.mailer_from: Corcoviewer <mailer@corcoviewer.com>
    app.mailer_to: Borut <bobalazek124@gmail.com>
    # Credentials
    app.aws:
        key: '%env(AWS_KEY)%'
        secret: '%env(AWS_SECRET)%'
    app.aws.s3:
        version: '%env(AWS_S3_VERSION)%'
        region: '%env(AWS_S3_REGION)%'
        bucket: '%env(AWS_S3_BUCKET)%'
    app.oauth.facebook:
        id: '%env(OAUTH_FACEBOOK_ID)%'
        secret: '%env(OAUTH_FACEBOOK_SECRET)%'
        version: '%env(OAUTH_FACEBOOK_VERSION)%'
        scope: '%env(OAUTH_FACEBOOK_SCOPE)%'
    app.oauth.google:
        id: '%env(OAUTH_GOOGLE_ID)%'
        secret: '%env(OAUTH_GOOGLE_SECRET)%'
    app.google.recaptcha.site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'
    # TFA
    app.tfa.allowed_routes:
        - null # error
        - auth.logout
        - auth.login.tfa

services:
    _defaults:
        autowire: true
        autoconfigure: true

    # App
    App\:
        resource: '../src/*'
        exclude:
            - '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'
            - '../src/DataFixtures/data/**/*.php'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\EventSubscriber\LocaleSubscriber:
        arguments: ['%kernel.default_locale%']

    App\EventSubscriber\TfaSubscriber:
        arguments:
            $allowedRoutes: '%app.tfa.allowed_routes%'

    App\EventSubscriber\ImageUploadSubscriber:
        tags:
            - { name: 'doctrine.event_subscriber' }

    App\EventListener\UserDeviceListener:
        tags:
            - { name: kernel.event_listener, event: kernel.controller }
            - { name: kernel.event_listener, event: kernel.response }

    # Gedmo
    Gedmo\Timestampable\TimestampableListener:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    Gedmo\Tree\TreeListener:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    Gedmo\SoftDeleteable\SoftDeleteableListener:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    # Symfony
    Symfony\Bridge\Monolog\Handler\ElasticsearchLogstashHandler:
        arguments:
            - 'http://elasticsearch:9200'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'
